pipeline {
    agent any

    environment {
        // Variables d'environnement pour Nexus et Docker
        registry = "192.168.65.129:8083" // Ton registre Nexus
        imageName = "houdachaanbi/timesheet-devops-1.0.0"  // Nom de l'image Docker
        dockerRegistry = "http://${registry}"  // URL du registre Docker
        registryCredentials = "nexus"  // Credentials ID pour Nexus Docker Registry
    }

    stages {
        // Cloner le dépôt Git
        stage('Git') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/hwafa/timesheetproject.git'
            }
        }

        // Compilation du projet avec Maven
        stage('Compile') {
            steps {
                sh 'mvn clean compile'
            }
        }

        /*
        // Analyses SonarQube (si nécessaire)
        stage('MVN Sonarqube') {
            steps {
                sh '''mvn sonar:sonar \
                    -Dsonar.login=squ_745a76d8d40e899942e83b4416d6be8a5b911c47 \
                    -Dmaven.test.skip=true'''
            }
        }
        */

        // Installation et déploiement vers Nexus
        stage('MVN Nexus') {
            steps {
                sh 'mvn install -Dmaven.test.skip=true'
            }
        }

        // Construction de l'image Docker
        stage('Docker Build') {
            steps {
                script {
                    // Authentification avec Docker registry Nexus
                    docker.withRegistry(dockerRegistry, registryCredentials) {
                        // Construction de l'image Docker
                        sh 'docker build -t ${imageName } .'
                    }
                }
            }
        }

        // Pousser l'image Docker dans le registre Nexus
        stage('Docker Push') {
            steps {
                script {
                    // Pousser l'image Docker dans le registre
                    docker.withRegistry(dockerRegistry, registryCredentials) {
                        sh 'docker push ${imageName}'
                    }
                }
            }
        }
    }
}
